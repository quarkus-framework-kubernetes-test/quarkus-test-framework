name: "PR"
on:
  issue_comment:
    types: [ created ]
jobs:
  write-comment:
    name: Write comment
    runs-on: ubuntu-latest
    if: >
      github.event.issue.pull_request &&
      (
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'OWNER'
      ) &&
      contains(github.event.comment.body, 'run kubernetes')
    outputs:
      comment_id: ${{ steps.create_comment.outputs.result }}
      head_sha: ${{ steps.get_pr_sha.outputs.pr_sha }}
    steps:
      - name: Get PR SHA
        id: get_pr_sha
        uses: actions/github-script@v8
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            // This can't be return as it will pass the sha with quotes
            core.setOutput('pr_sha', pr.data.head.sha);
      - name: Comment PR with Link
        id: create_comment
        uses: actions/github-script@v8
        with:
          script: |
            const runUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            const { data: comment } = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `üöß Kubernetes workflow run started and I'll update this comment with results! [View the run here](${runUrl})`
            });
            return comment.id;
  kubernetes-build-jvm-latest:
    name: Kubernetes JVM
    runs-on: ubuntu-latest
    needs: write-comment
    strategy:
      matrix:
        include:
          - quarkus-version: "999-SNAPSHOT"
            java: 17
            extra-maven-args: ''
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ needs.write-comment.outputs.head_sha }}
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Set up Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.14.0
        with:
          minikube version: 'v1.36.0'
          kubernetes version: 'v1.33.1'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: |
          mvn -B --no-transfer-progress -fae -s .github/quarkus-snapshots-mvn-settings.xml clean install -Pframework,examples,kubernetes -Dquarkus.platform.version="${{ matrix.quarkus-version }}" ${{ matrix.extra-maven-args }}
  update-comment:
    name: Update comment
    runs-on: ubuntu-latest
    needs: [ write-comment, kubernetes-build-jvm-latest ]
    if: always()
    steps:
      - name: Update PR comment with status
        uses: actions/github-script@v8
        with:
          script: |
            const runUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            let body;
            const jvmJobResult = '${{ needs.kubernetes-build-jvm-latest.result }}';
            const nativeJobResult = '${{ needs.kubernetes-build-native-latest.result }}';
            
            if (jvmJobResult === 'success' && nativeJobResult === 'success') {
              body = `‚úÖ Kubernetes workflow finished successfully! [View the details here](${runUrl})`;
            } else {
              body = `Kubernetes workflow failed. ‚ùå \n\n` +
                      `‚Ä¢ **JVM Build**: ${jvmJobResult}\n` +
                      `‚Ä¢ **Native Build**: ${nativeJobResult}\n\n` +
                      `[View the details here](${runUrl})`;
            }
            
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ needs.write-comment.outputs.comment_id }},
              body: body
            });
